{"version":3,"file":"users-89c41aba.js","sources":["../../src/stores/users.js"],"sourcesContent":["import { client, gql } from \"../utils/client\";\nimport { notifications } from \"./quickNotifications\";\nimport createStatusStore from \"../utils/createStatusStore\";\n\nconst status = createStatusStore();\n\nconst fragments = {\n  ALL_FIELDS: gql`\n    id\n    email\n    first_name\n    last_name\n    address_line_1\n    address_line_2\n    postal_code\n    locality\n    country`,\n};\n\nconst queries = {\n  GET: gql`\n    query ListUsersByRole($role: Role, $offset: ID, $page_size: Int) {\n      getUsers(role: $role, offset: $offset, page_size: $page_size) {\n        ${fragments.ALL_FIELDS}\n      }\n    }`,\n\n  GET_BY_SEARCH_QUERY: gql`\n    query SearchUsers($query: String!, $roles: [Role!], $page_size: Int) {\n      searchUsers(query: $query, roles: $roles, page_size: $page_size) {\n        ${fragments.ALL_FIELDS}\n      }\n    }`,\n};\n\nfunction createUsersStore() {\n  let users = [];\n  let subs = [];\n\n  function subscribe(handler) {\n    subs.push(handler);\n    handler(users);\n\n    return function unsubscribe() {\n      subs = subs.filter((fn) => fn !== handler);\n    };\n  }\n\n  function set(value) {\n    users = value;\n    for (const fn of subs) fn(users);\n  }\n\n  function reset() {\n    set([])\n  }\n\n  async function fetch({ role = \"all\", offset = \"0\", page_size = 20 } = {}) {\n    status.set(\"FETCHING\");\n\n    const { data, errors } = await client.request(queries.GET, {\n      role,\n      offset,\n      page_size,\n    });\n\n    if (errors) {\n      status.set(\"ERROR\");\n\n      notifications.display({\n        message: \"Fehler: \" + errors[0].message,\n        level: \"error\",\n      });\n    } else {\n      set(data.getUsers);\n      status.set(\"FETCHED\");\n    }\n  }\n\n  async function search(query, { roles, page_size } = {}) {\n    status.set(\"FETCHING\");\n\n    const { data, errors } = await client.request(queries.GET_BY_SEARCH_QUERY, {\n      query,\n      roles,\n      page_size,\n    });\n\n    if (errors) {\n      status.set(\"ERROR\");\n\n      notifications.display({\n        message: \"Fehler: \" + errors[0].message,\n        level: \"error\",\n      });\n    } else {\n      set(data.searchUsers);\n\n      status.set(\"FETCHED\");\n    }\n  }\n\n  return {\n    reset,\n    fetch,\n    search,\n    subscribe,\n  };\n}\n\nconst users = createUsersStore();\n\nexport { users, status };\n"],"names":["status","createStatusStore","fragments","gql","queries","GET","GET_BY_SEARCH_QUERY","users","subs","set","value","fn","reset","fetch","async","role","offset","page_size","data","errors","client","request","notifications","display","message","level","getUsers","search","query","roles","searchUsers","subscribe","handler","push","filter","createUsersStore"],"mappings":"yJAIK,MAACA,EAASC,IAETC,EACQC,CAAG;;;;;;;;;aAYXC,EAAU,CACdC,IAAKF,CAAG;;;UAGAD;;OAIRI,oBAAqBH,CAAG;;;UAGhBD;;QAgFL,MAACK,EA3EN,WACE,IAAIA,EAAQ,GACRC,EAAO,GAWX,SAASC,EAAIC,GACXH,EAAQG,EACR,IAAK,MAAMC,KAAMH,EAAMG,EAAGJ,GAoD5B,MAAO,CACLK,MAlDF,WACEH,EAAI,KAkDJI,MA/CFC,gBAAqBC,KAAEA,EAAO,MAAKC,OAAEA,EAAS,IAAGC,UAAEA,EAAY,IAAO,IACpEjB,EAAOS,IAAI,YAEX,MAAMS,KAAEA,EAAIC,OAAEA,SAAiBC,EAAOC,QAAQjB,EAAQC,IAAK,CACzDU,KAAAA,EACAC,OAAAA,EACAC,UAAAA,IAGEE,GACFnB,EAAOS,IAAI,SAEXa,EAAcC,QAAQ,CACpBC,QAAS,WAAaL,EAAO,GAAGK,QAChCC,MAAO,YAGThB,EAAIS,EAAKQ,UACT1B,EAAOS,IAAI,aA8BbkB,OA1BFb,eAAsBc,GAAOC,MAAEA,EAAKZ,UAAEA,GAAc,IAClDjB,EAAOS,IAAI,YAEX,MAAMS,KAAEA,EAAIC,OAAEA,SAAiBC,EAAOC,QAAQjB,EAAQE,oBAAqB,CACzEsB,MAAAA,EACAC,MAAAA,EACAZ,UAAAA,IAGEE,GACFnB,EAAOS,IAAI,SAEXa,EAAcC,QAAQ,CACpBC,QAAS,WAAaL,EAAO,GAAGK,QAChCC,MAAO,YAGThB,EAAIS,EAAKY,aAET9B,EAAOS,IAAI,aAQbsB,UAnEF,SAAmBC,GAIjB,OAHAxB,EAAKyB,KAAKD,GACVA,EAAQzB,GAED,WACLC,EAAOA,EAAK0B,OAAQvB,GAAOA,IAAOqB,MAkE1BG"}
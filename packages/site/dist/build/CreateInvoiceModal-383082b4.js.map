{"version":3,"file":"CreateInvoiceModal-383082b4.js","sources":["../../src/stores/invoice.js","../../src/components/CreateInvoiceModal.svelte"],"sourcesContent":["import { client, gql } from \"../utils/client\";\nimport { notifications } from \"./quickNotifications\";\nimport createStatusStore from \"../utils/createStatusStore\";\n\nconst status = createStatusStore();\n\nconst queries = {\n  GET: gql`\n    query GetInvoice($id: ID!) {\n      getInvoice(id: $id) {\n        id\n        amount\n        items {\n          description\n        }\n        state\n        customer_first_name\n        customer_last_name\n        customer_address_line_1\n        customer_address_line_2\n        customer_postal_code\n        customer_locality\n        customer_country\n        created_at\n        payments {\n          id\n        }\n        student {\n          id\n        }\n      }\n    }\n  `,\n};\n\nconst mutations = {\n  CREATE: gql`\n    mutation CreateInvoice($input: InvoiceInput!) {\n      createInvoice(input: $input) {\n        id\n      }\n    }\n  `,\n};\n\nfunction createInvoiceStore() {\n  let invoices = [];\n  let subs = [];\n\n  function subscribe(handler) {\n    subs.push(handler);\n    handler(invoices);\n\n    return function unsubscribe() {\n      subs = subs.filter((fn) => fn !== handler);\n    };\n  }\n\n  function set(value) {\n    invoices = value;\n    for (const fn of subs) fn(invoices);\n  }\n\n  async function fetch(id) {}\n\n  async function create(input) {\n    status.set(\"CREATING\");\n\n    const { data, errors } = await client.request(mutations.CREATE, { input });\n\n    if (errors) {\n      status.set(\"ERROR\");\n\n      notifications.display({\n        message: \"Fehler: \" + errors[0].message,\n        level: \"error\",\n      });\n    } else {\n      set(data.createInvoice);\n      status.set(\"CREATED\");\n\n      notifications.display({\n        message: \"Rechnung wurder erstellt.\",\n      });\n    }\n  }\n\n  return {\n    fetch,\n    create,\n    subscribe,\n  };\n}\n\nconst invoice = createInvoiceStore();\n\nexport { invoice, status };\n","<script>\n  import { formatter } from \"../utils/currency\";\n  import { classes } from \"../stores/classes\";\n  import { getTimeString } from \"../utils/time\";\n  import { invoice, status } from \"../stores/invoice\";\n  import { clss } from \"../stores/class\";\n\n  export let student;\n  export let show = false;\n  export let requestClassChange = false;\n  export let oldClassId;\n\n  let newClassId;\n\n  status.reset();\n  classes.fetch();\n\n  $: filteredClasses = $classes.filter(\n    (c) =>\n      c.gender === student.gender &&\n      c.state !== \"CANCELLED\" &&\n      c.state !== \"COMPLETED\"\n  );\n\n  $: if (oldClassId && newClassId)\n    clss\n      .requestClassChange(student.id, oldClassId, newClassId)\n      .then((i) => (input = i));\n\n  $: if ($status === \"CREATED\") {\n    show = false;\n  }\n\n  let input = {\n    student_id: student.id,\n    items: [{ type: \"class\", description: \"\", price: 1000, quantity: 1 }],\n  };\n\n  function addItem() {\n    input.items = [\n      ...input.items,\n      { type: \"material\", description: \"\", price: 1000, quantity: 1 },\n    ];\n  }\n\n  function addClass() {\n    input.items = [\n      ...input.items,\n      { type: \"class\", description: \"\", price: 0, quantity: 2, class_id: null },\n    ];\n  }\n\n  function removeItem(index) {\n    input.items = input.items.filter((item, i) => i !== index);\n  }\n\n  function hide() {\n    show = false;\n  }\n\n  function create() {\n    let incomplete = false;\n\n    for (const item of input.items) {\n      if (\n        item.type === \"class\" &&\n        !filteredClasses.find(({ id }) => id === item.class_id)\n      ) {\n        incomplete = true;\n      }\n\n      if (item.type === \"material\" && !item.description) {\n        incomplete = true;\n      }\n    }\n\n    if (incomplete) return;\n\n    const items = input.items.map(\n      ({ description, price, quantity, class_id }) => ({\n        description,\n        price,\n        quantity,\n        class_id,\n      })\n    );\n\n    invoice.create({ ...input, items });\n\n    if (requestClassChange) {\n      clss.delEnrollment(student.enrollment_id);\n      clss.createEnrollment(student.id, newClassId);\n    }\n  }\n</script>\n\n{#if show}\n  <div>\n    <div class=\"fixed top-0 left-0 z-20 w-full min-h-screen\">\n      <!-- transparent Backdrop -->\n      <div\n        class=\"absolute top-0 left-0 z-40 w-full h-full bg-black opacity-75\" />\n\n      <!-- Wrapper -->\n      <div\n        class=\"absolute top-0 left-0 z-50 flex items-end justify-center w-full h-full p-4 sm:items-center\">\n        <!-- Modal -->\n        <div\n          class=\"w-full overflow-hidden bg-gray-100 rounded shadow sm:w-3/4 md:w-2/3 lg:w-1/2 xl:w-1/3\">\n          <header class=\"p-4 bg-white\">\n            <p class=\"m-0 text-xl\">\n              Neue Rechnung f√ºr\n              {student.first_name + ' ' + student.last_name}\n            </p>\n          </header>\n\n          {#if requestClassChange}\n            <form class=\"p-4 bg-white\">\n              <div>\n                <label for=\"new_class\">Neue Klasse</label>\n                <select id=\"new_class\" bind:value={newClassId}>\n                  <option value=\"\" />\n                  {#each filteredClasses as { id, subject, times, teacher }}\n                    <option value={id}>\n                      {`${subject}, ${getTimeString(times)}, ${teacher.first_name} ${teacher.last_name}`}\n                    </option>\n                  {/each}\n                </select>\n              </div>\n            </form>\n          {/if}\n\n          <div class=\"p-4 bg-white\">\n            <div class=\"flex justify-end mb-6\">\n              <button\n                on:click={addClass}\n                class=\"mr-3 text-green-600 focus:outline-none hover:text-green-700\">Unterricht\n              </button>\n              <button\n                on:click={addItem}\n                class=\"text-green-600 focus:outline-none hover:text-green-700\">Material\n              </button>\n            </div>\n            <div class=\"flex mb-1\">\n              <div class=\"w-7/12 mr-3 text-sm text-gray-700\">Beschreibung</div>\n              <div class=\"w-2/12 mr-3 text-sm text-gray-700 uppercase\">\n                Preis\n              </div>\n              <div class=\"w-2/12 text-sm text-gray-700 uppercase\">Menge</div>\n              <div class=\"w-1/12\" />\n            </div>\n\n            {#each input.items as item, index (item)}\n              {#if item.type === 'class'}\n                <div class=\"flex mb-3\">\n                  <select\n                    bind:value={item.class_id}\n                    on:blur={({ target }) => (item.price = filteredClasses.find((c) => c.id === target.value).price_per_hour)}\n                    class=\"w-7/12 mr-3 inp\">\n                    <option value=\"\" />\n\n                    {#each filteredClasses as { id, subject, times, teacher }}\n                      <option value={id}>\n                        {`${subject}, ${getTimeString(times)}, ${teacher.first_name} ${teacher.last_name}`}\n                      </option>\n                    {/each}\n                  </select>\n\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    bind:value={item.price}\n                    class=\"w-2/12 mr-3 inp\" />\n\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    bind:value={item.quantity}\n                    class=\"w-2/12 inp\" />\n\n                  <div class=\"flex items-center justify-end w-1/12\">\n                    <button\n                      on:click={() => removeItem(index)}\n                      class=\"p-1 text-red-700 bg-red-100 rounded-full focus:outline-none hover:bg-red-200\">\n                      <svg\n                        width=\"16\"\n                        height=\"16\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"><line\n                          x1=\"18\"\n                          y1=\"6\"\n                          x2=\"6\"\n                          y2=\"18\" />\n                        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              {:else}\n                <div class=\"flex mb-3\">\n                  <input\n                    type=\"text\"\n                    bind:value={item.description}\n                    class=\"w-7/12 mr-3 inp\" />\n\n                  <input\n                    type=\"number\"\n                    bind:value={item.price}\n                    class=\"w-2/12 mr-3 inp\" />\n\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    bind:value={item.quantity}\n                    class=\"w-2/12 inp\" />\n\n                  <div class=\"flex items-center justify-end w-1/12\">\n                    <button\n                      on:click={() => removeItem(index)}\n                      class=\"p-1 text-red-700 bg-red-100 rounded-full focus:outline-none hover:bg-red-200\">\n                      <svg\n                        width=\"16\"\n                        height=\"16\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"><line\n                          x1=\"18\"\n                          y1=\"6\"\n                          x2=\"6\"\n                          y2=\"18\" />\n                        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              {/if}\n            {/each}\n\n            <div class=\"flex\">\n              <div class=\"w-7/12 mr-3\" />\n              <div class=\"w-2/12 mr-3\">Gesamt:</div>\n              <div class=\"w-2/12 font-semibold text-teal-700\">\n                {formatter.format(input.items.reduce((acc, i) => (acc += i.price * i.quantity), 0) / 100)}\n              </div>\n              <div class=\"w-1/12\" />\n            </div>\n          </div>\n\n          <footer class=\"flex justify-between p-4 bg-gray-200\">\n            <button on:click={hide} class=\"btn btn--secondary\">\n              Abbrechen\n            </button>\n            <button\n              on:click={create}\n              disabled={$status === 'CREATING'}\n              class=\"btn btn--primary\">\n              {$status === 'CREATING' ? 'Einen Moment...' : requestClassChange ? 'Klasse wechseln' : 'Erstellen'}\n            </button>\n          </footer>\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}\n"],"names":["status","createStatusStore","gql","mutations","CREATE","invoice","invoices","subs","fetch","async","id","create","input","set","data","errors","client","request","notifications","display","message","level","value","fn","createInvoice","subscribe","handler","push","filter","createInvoiceStore","t2_value","ctx","first_name","last_name","formatter","format","items","reduce","func","t25_value","create_if_block_2","each_value","length","i","button3","disabled","button3_disabled_value","insert","target","div16","anchor","append","div15","div0","div14","div13","header","p","div12","div1","button0","button1","div6","div11","div7","div8","div9","div10","footer","button2","dirty","set_data","t2","t20","t20_value","t25","add_render_callback","call","select","form","div","label","option","getTimeString","t0","t0_value","input0","set_input_value","description","input1","price","input2","quantity","button","to_number","class_id","select_change_handler_1","select_option","type","create_if_block_1","create_if_block","acc","newClassId","student","$$props","show","requestClassChange","oldClassId","reset","classes","student_id","removeItem","index","$$invalidate","item","filteredClasses","$classes","c","gender","state","clss","then","$status","incomplete","find","map","delEnrollment","enrollment_id","createEnrollment","select_value","this","price_per_hour"],"mappings":"ufAIA,MAAMA,EAASC,IAGRC,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;IA4BV,MAAMC,EAAY,CAChBC,OAAQF,CAAG;;;;;;KA0Db,MAAMG,EAjDN,WACE,IAAIC,EAAW,GACXC,EAAO,GAwCX,MAAO,CACLC,MAzBFC,eAAqBC,KA0BnBC,OAxBFF,eAAsBG,GACpBZ,EAAOa,IAAI,YAEX,MAAMC,KAAEA,EAAIC,OAAEA,SAAiBC,EAAOC,QAAQd,EAAUC,OAAQ,CAAEQ,MAAAA,IAE9DG,GACFf,EAAOa,IAAI,SAEXK,EAAcC,QAAQ,CACpBC,QAAS,WAAaL,EAAO,GAAGK,QAChCC,MAAO,aAjBb,SAAaC,GACXhB,EAAWgB,EACX,IAAK,MAAMC,KAAMhB,EAAMgB,EAAGjB,GAkBxBO,CAAIC,EAAKU,eACTxB,EAAOa,IAAI,WAEXK,EAAcC,QAAQ,CACpBC,QAAS,gCAQbK,UAzCF,SAAmBC,GAIjB,OAHAnB,EAAKoB,KAAKD,GACVA,EAAQpB,GAED,WACLC,EAAOA,EAAKqB,OAAQL,GAAOA,IAAOG,MAwCxBG,kZCkBDC,GAAAC,KAAQC,WAAa,IAAMD,KAAQE,8BAyIjCC,EAAUC,OAAOJ,EAAK,GAACK,MAAMC,OAAMC,EAA4C,GAAK,KAAG,GAczFC,GAAY,aAAZR,KAAyB,kBAAoBA,EAAkB,GAAG,kBAAoB,eAnJtFA,EAAkB,IAAAS,EAAAT,GAoCdU,GAAAV,KAAMK,kBAAsBL,EAAI,qBAArCW,OAAIC,GAAA,EAAA,mJA1CiB,uvCAuJXC,EAAAC,SAAAC,GAAY,aAAZf,2WApKtBgB,EA4KMC,EAAAC,EAAAC,GA3KJC,EA0KMF,EAAAG,GAxKJD,EACyEC,EAAAC,UAGzEF,EAmKMC,EAAAE,GAhKJH,EA+JMG,EAAAC,GA7JJJ,EAKSI,EAAAC,GAJPL,EAGIK,EAAAC,gDAmBNN,EAyHMI,EAAAG,GAxHJP,EASMO,EAAAC,GARJR,EAGSQ,EAAAC,UACTT,EAGSQ,EAAAE,UAEXV,EAOMO,EAAAI,8DA+FNX,EAOMO,EAAAK,GANJZ,EAA2BY,EAAAC,UAC3Bb,EAAsCY,EAAAE,UACtCd,EAEMY,EAAAG,iBACNf,EAAsBY,EAAAI,UAI1BhB,EAUSI,EAAAa,GATPjB,EAESiB,EAAAC,UACTlB,EAKSiB,EAAAxB,+BAjIKb,EAAQ,gBAIRA,EAAO,gBAqHHA,EAAI,iBAIVA,EAAM,qBApJf,EAAAuC,EAAA,IAAAxC,MAAAA,GAAAC,KAAQC,WAAa,IAAMD,KAAQE,YAASsC,EAAAC,EAAA1C,IAI5CC,EAAkB,4EAoCdU,GAAAV,KAAMK,2DAiGRF,EAAUC,OAAOJ,EAAK,GAACK,MAAMC,OAAMC,EAA4C,GAAK,KAAG,KAAAiC,EAAAE,EAAAC,IAczF,GAAAJ,EAAA,IAAA/B,MAAAA,GAAY,aAAZR,KAAyB,kBAAoBA,EAAkB,GAAG,kBAAoB,cAAWwC,EAAAI,EAAApC,IAFxF,GAAA+B,EAAA,IAAAxB,MAAAA,GAAY,aAAZf,yIA3ICA,EAAe,wBAApBW,OAAIC,GAAA,sPAFqC,IAAVZ,EAAU,IAAA6C,EAAA,IAAA7C,EAAA,IAAA8C,KAAAC,wCAHjD/B,EAYOC,EAAA+B,EAAA7B,GAXLC,EAUM4B,EAAAC,GATJ7B,EAA0C6B,EAAAC,UAC1C9B,EAOS6B,EAAAF,GANP3B,EAAmB2B,EAAAI,kDADcnD,EAAU,oEAEpCA,EAAe,WAApBW,OAAIC,GAAA,EAAA,iHAAJD,oBAF+BX,EAAU,mEAInCA,EAAO,QAAKoD,EAAcpD,EAAK,SAAMA,EAAO,IAACC,cAAcD,EAAO,IAACE,8DAD1DF,EAAE,8BAAjBgB,EAESC,EAAAkC,EAAAhC,4CADHnB,EAAO,QAAKoD,EAAcpD,EAAK,SAAMA,EAAO,IAACC,cAAcD,EAAO,IAACE,cAASsC,EAAAa,EAAAC,mBADnEtD,EAAE,86BAgFrBgB,EAsCMC,EAAAW,EAAAT,GArCJC,EAG4BQ,EAAA2B,GADdC,EAAAD,EAAAvD,MAAKyD,oBAGnBrC,EAG4BQ,EAAA8B,GADdF,EAAAE,EAAA1D,MAAK2D,cAGnBvC,EAIuBQ,EAAAgC,GADTJ,EAAAI,EAAA5D,MAAK6D,iBAGnBzC,EAoBMQ,EAAAN,GAnBJF,EAkBSE,EAAAwC,yFAjCG,GAAAvB,EAAA,IAAAgB,EAAAhE,QAAAS,MAAKyD,aAALD,EAAAD,EAAAvD,MAAKyD,aAKL,GAAAlB,EAAA,IAAAwB,EAAAL,EAAAnE,SAAAS,MAAK2D,OAALH,EAAAE,EAAA1D,MAAK2D,OAML,GAAApB,EAAA,IAAAwB,EAAAH,EAAArE,SAAAS,MAAK6D,UAALL,EAAAI,EAAA5D,MAAK6D,gFAxDV7D,EAAe,wBAApBW,OAAIC,GAAA,2rBALmB,IAAbZ,MAAKgE,UAAQnB,EAAAoB,qTAF7BjD,EA+CMC,EAAAW,EAAAT,GA9CJC,EAWSQ,EAAAmB,GAPP3B,EAAmB2B,EAAAI,8CAHPe,EAAAnB,EAAA/C,MAAKgE,iBAYnB5C,EAI4BQ,EAAA2B,GADdC,EAAAD,EAAAvD,MAAK2D,cAGnBvC,EAIuBQ,EAAA8B,GADTF,EAAAE,EAAA1D,MAAK6D,iBAGnBzC,EAoBMQ,EAAAN,GAnBJF,EAkBSE,EAAAwC,gIAtCF9D,EAAe,WAApBW,OAAIC,GAAA,EAAA,iHAAJD,gBALUuD,EAAAnB,EAAA/C,MAAKgE,UAeL,GAAAzB,EAAA,IAAAwB,EAAAR,EAAAhE,SAAAS,MAAK2D,OAALH,EAAAD,EAAAvD,MAAK2D,OAML,GAAApB,EAAA,IAAAwB,EAAAL,EAAAnE,SAAAS,MAAK6D,UAALL,EAAAE,EAAA1D,MAAK6D,0EAdT7D,EAAO,QAAKoD,EAAcpD,EAAK,SAAMA,EAAO,IAACC,cAAcD,EAAO,IAACE,8DAD1DF,EAAE,8BAAjBgB,EAESC,EAAAkC,EAAAhC,4CADHnB,EAAO,QAAKoD,EAAcpD,EAAK,SAAMA,EAAO,IAACC,cAAcD,EAAO,IAACE,cAASsC,EAAAa,EAAAC,mBADnEtD,EAAE,oGATN,UAAdA,EAAI,IAACmE,KAAgBC,2PAzDnCpE,EAAI,IAAAqE,EAAArE,kEAAJA,EAAI,+GAyJ6CsE,EAAK1D,IAAO0D,EAAO1D,EAAE+C,MAAQ/C,EAAEiD,gFA7O/EU,WALOC,GAAOC,GACPC,KAAAA,GAAO,GAAKD,GACZE,mBAAAA,GAAqB,GAAKF,cAC1BG,GAAUH,EAIrBxG,EAAO4G,QACPC,EAAQrG,YAkBJI,EAAK,CACPkG,WAAYP,EAAQ7F,GACpB0B,MAAK,EAAK8D,KAAM,QAASV,YAAa,GAAIE,MAAO,IAAME,SAAU,KAiB1D,SAAAmB,EAAWC,GAClBC,EAAA,EAAArG,EAAMwB,MAAQxB,EAAMwB,MAAMR,OAAM,CAAEsF,EAAMvE,IAAMA,IAAMqE,GAAKpG,mNApC1DqG,EAAA,EAAEE,EAAkBC,EAASxF,OAC3ByF,GACCA,EAAEC,SAAWf,EAAQe,QACT,cAAZD,EAAEE,OACU,cAAZF,EAAEE,4BAGCZ,GAAcL,GACnBkB,EACGd,mBAAmBH,EAAQ7F,GAAIiG,EAAYL,GAC3CmB,KAAM9E,GAACsE,EAAA,EAAMrG,EAAQ+B,sBAEP,YAAZ+E,GACLT,EAAA,EAAAR,GAAO,kCASP7F,EAAMwB,MAAK,IACNxB,EAAMwB,OACP8D,KAAM,WAAYV,YAAa,GAAIE,MAAO,IAAME,SAAU,uBAK9DhF,EAAMwB,MAAK,IACNxB,EAAMwB,OACP8D,KAAM,QAASV,YAAa,GAAIE,MAAO,EAAGE,SAAU,EAAGG,SAAU,wBASrEkB,EAAA,EAAAR,GAAO,eAIH,IAAAkB,GAAa,YAENT,KAAQtG,EAAMwB,MAEP,UAAd8E,EAAKhB,MACJiB,EAAgBS,KAAI,EAAIlH,GAAAA,KAASA,IAAOwG,EAAKnB,YAE9C4B,GAAa,GAGG,aAAdT,EAAKhB,MAAwBgB,EAAK1B,cACpCmC,GAAa,MAIbA,EAAU,aAERvF,EAAQxB,EAAMwB,MAAMyF,IAAG,EACxBrC,YAAAA,EAAaE,MAAAA,EAAOE,SAAAA,EAAUG,SAAAA,MAC/B,CAAAP,YAAAA,EACAE,MAAAA,EACAE,SAAAA,EACAG,SAAAA,KAIJ1F,EAAQM,OAAY,IAAAC,EAAOwB,MAAAA,IAEvBsE,IACFc,EAAKM,cAAcvB,EAAQwB,eAC3BP,EAAKQ,iBAAiBzB,EAAQ7F,GAAI4F,oBA6BWA,EAAU2B,EAAAC,uDAoCxBnC,SAAQkC,EAAAC,0DACb,CAAAhB,EAAAzE,EAAAuE,GAAAhE,OAAAA,cAAmB0C,MAAQyB,EAAgBS,KAAMP,GAAMA,EAAE3G,KAAOsC,EAAO1B,OAAO6G,eAAcvH,sBAcvF8E,MAAKI,EAAAoC,KAAA5G,8EAMLsE,SAAQE,EAAAoC,KAAA5G,2DAKP0F,GAAAD,EAAWC,sBAwBZxB,YAAW0C,KAAA5G,6EAKXoE,MAAKI,EAAAoC,KAAA5G,8EAMLsE,SAAQE,EAAAoC,KAAA5G,2DAKP0F,GAAAD,EAAWC"}